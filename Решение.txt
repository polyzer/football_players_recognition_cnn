1. Общее описание решения и способ воспроизвести его:

Ход построения модели и обучение представлены в ноутбуке Football_players_prediction.ipynb (ниже копия информации из ноутбука)
Чтобы воспроизвести обучение, нужно:
 Установить зависимости (ниже)
 распаковать task.zip в текущую директорию.
 последовательно запустить все ячейки в этом ноутбуке :)
Собственно, пайплайн состоит из следующих частей:
1) Нормализуем изображения.
    - меняем порядок пикселей на RGB
    - приводим все изображения к одному размеру
    - нормализуем изображения.
2) Создаём модель.
    - В данном случае используется простая CNN с 25 выходами (по одному на класс).
    - Керас сам разбивает выборку на test/valid (9/1)
3) Обучаем.
    - Используем accuracy.
    
4) Предсказываем класс.
Чтобы воспроизвести обучение нужны следующие библиотеки:

Бот построен с библиотекой PyTelegramBot.
Для деплоя использовался Heroku.
https://devcenter.heroku.com/articles/getting-started-with-python?singlepage=true#introduction

*В момент деплоя столкнулся с проблемой, что Heroku скипает соединение после 60 секунд. Решить не смог, хотя
по ссылкам ниже есть решения. Собственно, думал, что бота буду запускать со своего ноута, но как-то это не очень.
https://qna.habr.com/q/417341?_ga=2.21203379.908785051.1584653461-1957470827.1580395773

==============================================================
2. Метрика - accuracy.
3. Слабые места следующие: 
 - датасет небольшой. (хотя, можно решить аугментацией - добавлять шум, небольшие повороты, отражения и тд)
 - можно удалить фон.
 - в данных есть множество похожих друг на фотографий, принадлежащих разным классам. Т.е. не несущих информативных признаков (таких - как номер игрока).
На самом деле, на 
4. TODO:
 - расширить датасет(в т.ч. можно аугментацией);
 - удалить фон. Это должно быть довольно полезным;
